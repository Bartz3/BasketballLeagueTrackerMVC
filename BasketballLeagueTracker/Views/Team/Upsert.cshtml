@using BasketballLeagueTracker.ViewModels;
@model TeamViewModel

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card shadow border-0">
                <div class="card-header bg-primary text-white">
                    <h2 class="text-center">
                        @(Model.Team != null && Model.Team.TeamId != 0 ? "Edytuj " : "Dodaj ") drużynę
                    </h2>
                </div>
                <div class="card-body p-4">
                    <form method="post" asp-controller="Team" asp-action="Upsert" enctype="multipart/form-data">
                        <input asp-for="Team.TeamId" hidden />

                        <div class="border p-3">
                            <div class="form-floating py-2 col-12">
                                <input asp-for="Team.Name" class="form-control border-0 shadow" />
                                <label asp-for="Team.Name" class="ms-2"></label>
                                <span asp-validation-for="Team.Name" class="text-danger"></span>
                            </div>
                            <div class="form-floating py-2 col-12">
                                <input asp-for="Team.Description" class="form-control border-0 shadow" />
                                <label asp-for="Team.Description" class="ms-2"></label>
                                <span asp-validation-for="Team.Description" class="text-danger"></span>
                            </div>
                            <div class="mb-3 row p-1">
                                <label asp-for="Team.TeamLogo" class="ms-2"></label>
                                <input asp-for="Team.TeamLogo" name="file" type="file" class="form-control border-0 shadow " onchange="handleFileInputChange(this,'teamLogoPreview')" />
                            </div>


                            @if (Model.Team.TeamLogo != null)
                            {
                                <img height="100" width="100" src="data:image/png;base64,@(Convert.ToBase64String(Model.Team.TeamLogo))" alt="Team Logo" />
                            }
                            <div class="mb-3 row p-1">
                                <img id="teamLogoPreview" src="#" alt="" style="max-width: 200px; max-height: 200px;" />
                            </div>


                            <div class="form-group">
                                <label for="latitude">Szerokość geograficzna:</label>
                                <input type="text" id="latitude" asp-for=TeamStadium.StadiumLatitude class="form-control" readonly />
                            </div>
                            <div class="form-group">
                                <label for="longitude">Długość geograficzna:</label>
                                <input type="text" id="longitude" asp-for=TeamStadium.StadiumLongitude class="form-control" readonly />
                            </div>
                            <div class="form-group">
                                <label for="address">Adress</label>
                                <input type="text" id="address" asp-for=TeamStadium.Address class="form-control" readonly />
                            </div>

                            <div class="form-group">
                                <label for="stadiumLocation">Lokalizacja stadionu:</label>
                                <div id="map"
                                     data-lat="@(Model.TeamStadium != null && Model.TeamStadium.StadiumLatitude != null ? Model.TeamStadium.StadiumLatitude : "")"
                                     data-lng="@(Model.TeamStadium != null && Model.TeamStadium.StadiumLongitude != null ? Model.TeamStadium.StadiumLongitude : "")"
                                     style="height:300px;">
                                </div>

                            </div>


                            <div class="row">
                                <div class="col-6 col-md-3 mt-4">
                                    @if (Model.Team.TeamId != 0)
                                    {
                                        <button type="submit" class="btn btn-primary form-control">Edytuj</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-primary form-control">Stwórz</button>
                                    }
                                </div>
                                <div class="col-6 col-md-3">
                                    <a asp-controller="Team" asp-action="Index" class="btn btn-outline-secondary form-control">Wróć do listy zawodników</a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
        <script src="~/js/site.js"></script>
        //<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-WLvSSFAzty14uSchw8-AJnRBUQxoh4o&libraries=places"></script>

        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC-WLvSSFAzty14uSchw8-AJnRBUQxoh4o&callback=initMap" defer></script>

        <script>
            var map;
            var marker;
            var geocoder; // Geocoder to address

            var mapElement = document.getElementById('map');

            var initLat = parseFloat(mapElement.getAttribute('data-lat'));
            var initLng = parseFloat(mapElement.getAttribute('data-lng'));

            if (isNaN(initLat) || isNaN(initLng)) {
                initLat = 53.07;
                initLng = 23.09;
            }

            var latitudeField = document.getElementById('latitude');
            var longitudeField = document.getElementById('longitude');
            var addressField = document.getElementById('address');

            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: initLat, lng: initLng },
                    zoom: 8
                });


                // Geocoder Init
                geocoder = new google.maps.Geocoder();

                var tempMarker = new google.maps.Marker({
                    position: { lat: initLat, lng: initLng },
                    map: map
                });

                map.addListener('click', function (e) {
                    tempMarker.setMap(null);
                    if (marker) marker.setMap(null);
                    marker = new google.maps.Marker({
                        position: e.latLng,
                        map: map
                    });

                    latitudeField.value = e.latLng.lat();
                    longitudeField.value = e.latLng.lng();

                    // Wywołanie funkcji geokodowania
                    reverseGeocode(e.latLng);
                });
            }

            function reverseGeocode(latlng) {
                geocoder.geocode({ 'location': latlng }, function (results, status) {
                    if (status === google.maps.GeocoderStatus.OK) {
                        if (results[0]) {
                            var formattedAddress = results[0].formatted_address;
                            addressField.value = formattedAddress;
                            //console.log('Adres: ' + formattedAddress);

                            // Tutaj możesz wykorzystać znaleziony adres do wyświetlenia lub przetworzenia
                        } else {
                            console.log('Nie znaleziono adresu.');
                        }
                    } else {
                        console.log('Błąd Geocodingu: ' + status);
                    }
                });
            }
        </script>

    }
}