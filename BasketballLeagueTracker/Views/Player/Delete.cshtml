@model Player

<form method="post">
    <div class="border p-3 mt-4">
        <div class="row pb-2">
            <h2 class="text-primary">Usuń zawodnika</h2>
            </hr>
        </div>
        @*<div asp-validation-summary="All"></div>*@
        <div class="mb-3 row p-1">
            <label asp-for="Name" class="p-0"></label>
            <input asp-for="Name" disabled class="form-control" />
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Surname" class="p-0"></label>
            <input asp-for="Surname" disabled class="form-control" />
        </div>
        <div class="mb-3 row p-1">
            <label asp-for="Positions" class="p-0"></label>
            <select asp-for="Positions" disabled asp-items="@(GetPlayerPositions())"></select>
            @*<select asp-for="Positions" asp-items="@(new SelectList(Enum.GetNames(typeof(PlayerPosition))))"></select>*@
            @*  <select asp-for="Positions" asp-items="Html.GetEnumSelectList<PlayerPosition>()" class="form-control"></select>*@
        </div>
        <div class="row">
            <div class="col-6 col-md-3">
                <button type="submit" class="btn btn-danger form-control">Usuń </button>
            </div>
            <div class="col-6 col-md-3">
                <a asp-controller="Player" asp-action="Index" class="btn btn-outline-secondary form-control">Wróć do listy zawodników</a>
            </div>

        </div>
    </div>
</form>


@functions
{
    public List<SelectListItem> GetPlayerPositions()
    {
        var playerPositions = Enum.GetValues(typeof(PlayerPosition)).Cast<PlayerPosition>();
        var selectListItems = playerPositions.Select(position =>
        {
            var displayAttribute = position.GetType().GetMember(position.ToString())
                .FirstOrDefault()?.GetCustomAttributes(false)
                .OfType<System.ComponentModel.DataAnnotations.DisplayAttribute>()
                .FirstOrDefault();

            var name = displayAttribute?.GetName() ?? position.ToString();
            return new SelectListItem { Value = ((int)position).ToString(), Text = name };
        }).ToList();

        return selectListItems;
    }
}
