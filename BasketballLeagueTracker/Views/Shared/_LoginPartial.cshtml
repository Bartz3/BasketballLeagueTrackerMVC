@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
var user = await UserManager.GetUserAsync(User);
var nickName = user?.Nickname;
var userName = await UserManager.GetUserNameAsync(user);

ViewBag.NickName = nickName;
ViewBag.UserName = userName;


}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Favourites" title="Manage">Witaj @if(!string.IsNullOrEmpty(ViewBag.NickName))
{
    @ViewBag.NickName
}
else
{
    @ViewBag.UserName
}!
</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-white border-0">Wyloguj</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link bi bi-file-earmark-person-fill p-2 text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Rejstracja</a>
        </li>
        <li class="nav-item">
            <a class="nav-link bi bi-person text-white" id="login" asp-area="Identity" asp-page="/Account/Login">
                Zaloguj się
            </a>
        </li>
    }
</ul>
